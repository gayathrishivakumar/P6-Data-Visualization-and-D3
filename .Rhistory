geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (All Collisions)") +
xlab("Driver's Age (P_AGE)") +
ylab("Count of Drivers") +
#http://stackoverflow.com/questions/11019692/place-annotation-at-the-top-of-a-series-of-histograms-in-ggplot2-using-a-for-loo
annotate("text", label = paste("Age 19: ",as.character(most_deaths)),
x= age_most - age_initial, hjust = 0, y = most_deaths + 100,
color= "black", size = 5) + #Show the exact number
annotate("text", label = paste("Age 46: ",as.character(older_deaths)),
x= age_old - age_initial, hjust = 0, y = older_deaths + 100,
color = "black", size = 5) + #Show the exact number
#added 100 to the y-axis so there would be no overlap between text and plot
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5) ) +
scale_fill_manual(values=c("pink", "lightblue"))
age_most <- 19
age_old <- 46 #2nd peak
age_initial <- 14 #lowest age on the bar chart
most_deaths <- length(which(df$P_AGE_NUM == age_most))
older_deaths <- length(which(df$P_AGE_NUM == age_old))
#I will choose 14 as the minimum since that is the lowest legal age
g1 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (All Collisions)") +
xlab("Driver's Age (P_AGE)") +
ylab("Count of Drivers") +
#http://stackoverflow.com/questions/11019692/place-annotation-at-the-top-of-a-series-of-histograms-in-ggplot2-using-a-for-loo
annotate("text", label = paste("Age 19: ",as.character(most_deaths)),
x= age_most - age_initial, hjust = 0, y = most_deaths + 100,
color= "black", size = 5) + #Show the exact number
annotate("text", label = paste("Age 46: ",as.character(older_deaths)),
x= age_old - age_initial, hjust = 0, y = older_deaths + 100,
color = "black", size = 5) + #Show the exact number
#added 100 to the y-axis so there would be no overlap between text and plot
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5) ) +
scale_fill_manual(values=c("pink", "lightblue"))
g1
g1 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (All Collisions)") +
xlab("Driver's Age (P_AGE)") +
ylab("Count of Drivers") +
#http://stackoverflow.com/questions/11019692/place-annotation-at-the-top-of-a-series-of-histograms-in-ggplot2-using-a-for-loo
annotate("text", label = paste("Age 19: ",as.character(most_deaths)),
x= age_most - age_initial, hjust = 0, y = most_deaths + 100,
color= "black", size = 2) + #Show the exact number
annotate("text", label = paste("Age 46: ",as.character(older_deaths)),
x= age_old - age_initial, hjust = 0, y = older_deaths + 100,
color = "black", size = 2) + #Show the exact number
#added 100 to the y-axis so there would be no overlap between text and plot
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5) ) +
scale_fill_manual(values=c("pink", "lightblue"))
g1
g1 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (All Collisions)") +
xlab("Driver's Age (P_AGE)") +
ylab("Count of Drivers") +
#http://stackoverflow.com/questions/11019692/place-annotation-at-the-top-of-a-series-of-histograms-in-ggplot2-using-a-for-loo
annotate("text", label = paste("Age 19: ",as.character(most_deaths)),
x= age_most - age_initial, hjust = 0, y = most_deaths + 100,
color= "black", size = 4) + #Show the exact number
annotate("text", label = paste("Age 46: ",as.character(older_deaths)),
x= age_old - age_initial, hjust = 0, y = older_deaths + 100,
color = "black", size = 4) + #Show the exact number
#added 100 to the y-axis so there would be no overlap between text and plot
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5) ) +
scale_fill_manual(values=c("pink", "lightblue"))
#2nd graph
deadliest_age <- 18 #can be seen from visually inspecting the graph
deadly_count <- length(which(df$P_AGE_NUM == 18 & df$M == 1))
g1
g1
df[df$P_AGE_NUM < 14,]
df
nrow(df[df$P_AGE_NUM < 14,])
underage_deaths$P_AGE
underage_deaths$P_AGE
underage_deaths$P_AGE
underage_deaths$P_AGE
underage <- nrow(df[df$P_AGE_NUM < 14,])
underage
q
underage_deaths <- nrow(df[df$P_AGE_NUM < 14 & df$C_SEV == 1,])
underage_deaths
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,105,5), labels = seq(0,105,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=5 , hjust=0, y=deadly_count, color= "black",
size=10)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,105,5), labels = seq(0,105,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=7 , hjust=0, y=deadly_count, color= "black",
size=15)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,105,5), labels = seq(0,105,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=6 , hjust=0, y=deadly_count - 10, color= "black",
size=15)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,105,5), labels = seq(0,105,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=6 , hjust=0, y=deadly_count - 5, color= "black",
size=15)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,85,5), labels = seq(0,85,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=6 , hjust=0, y=deadly_count - 2, color= "black",
size=15)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,85,5), labels = seq(0,85,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=5 , hjust=0, y=deadly_count - 2, color= "black",
size=15)
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,85,5), labels = seq(0,85,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=6 , hjust=0, y=deadly_count - 2, color= "black",
size=15)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,85,5), labels = seq(0,85,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=6 , hjust=0, y=deadly_count - 2, color= "black",
size=20)#show an asterisk
g2
g2 <- ggplot(aes(x=P_AGE), data = subset(df,P_AGE_NUM >= age_initial &
P_AGE_NUM <= 90 & M == 1)) +
geom_histogram(binwidth = 1, colour = "darkgreen", aes(fill = P_SEX)) +
ggtitle("Histogram of Driver's Age (Deadly Collisions)") +
xlab("Driver's Age (P_AGE)") +
scale_y_discrete(breaks = seq(0,85,5), labels = seq(0,85,5)) +
scale_x_discrete(breaks = seq(15,90,5), labels = seq(15,90,5)) +
#http://sape.inf.usi.ch/quick-reference/ggplot2/colour - color names
scale_fill_manual(values=c("pink", "lightblue")) +
theme(legend.title=element_blank(), legend.position = "top",
plot.title = element_text(lineheight=.8, face="bold")) +
annotate("text", label = "*", x=5.5 , hjust=0, y=deadly_count - 2, color= "black",
size=20)#show an asterisk
g2
g2 + theme(legend.position = "none",axis.text.x = element_text(size = 8,
angle = 0, vjust = 0.5, hjust=1),plot.title = element_text(lineheight=.8,
face="bold")) +
annotate("text", label = "Safety Device Used", x=0.1 , hjust=0, y=0.5,
color= "black", size=10) +
annotate("text", label = "Light Duty Vehicles (1)", x=0.0 ,
hjust=0, y=1.05, color= "black", size=5) +
annotate("text", label = "(5)", x=0.93 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(6)", x=0.95 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(7)", x=0.97 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(8)", x=0.99 , hjust=0, y=1.05,
color= "black", size=4) +
scale_y_continuous(breaks = seq(0,1,0.1), labels = seq(0,1,0.1)) +
scale_x_continuous(breaks = seq(0,1,0.1), labels = seq(0,1,0.1))
g2 <- ggMMplot(mdf$V_TYPE[mdf$M==0],mdf$P_SAFE[mdf$M==0], "Vehicle Type
(V_TYPE)", "Safety Device Used (P_SAFE)", "Safety Device Used by Vehicle
Type\n(Non-Deadly Collisions)")
mdf <- subset(df, !(df$P_SAFE %in% c("NN","QQ","UU")) &
(df$V_TYPE %in% c("01","05","06","07","08")))
#either a safety device was used or not - 01 - No Safety, all others 2 - Safety
mdf$P_SAFE <- ifelse(mdf$P_SAFE == "01","01","02")
g1 <- ggMMplot(mdf$V_TYPE[mdf$M==1],mdf$P_SAFE[mdf$M==1], "Vehicle Type
(V_TYPE)", "Safety Device Used (P_SAFE)","Safety Device Used by Vehicle
Type\n(Deadly Collisions)")
g2 <- ggMMplot(mdf$V_TYPE[mdf$M==0],mdf$P_SAFE[mdf$M==0], "Vehicle Type
(V_TYPE)", "Safety Device Used (P_SAFE)", "Safety Device Used by Vehicle
Type\n(Non-Deadly Collisions)")
g2 + theme(legend.position = "none",axis.text.x = element_text(size = 8,
angle = 0, vjust = 0.5, hjust=1),plot.title = element_text(lineheight=.8,
face="bold")) +
annotate("text", label = "Safety Device Used", x=0.1 , hjust=0, y=0.5,
color= "black", size=10) +
annotate("text", label = "Light Duty Vehicles (1)", x=0.0 ,
hjust=0, y=1.05, color= "black", size=5) +
annotate("text", label = "(5)", x=0.93 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(6)", x=0.95 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(7)", x=0.97 , hjust=0, y=1.05,
color= "black", size=4) +
annotate("text", label = "(8)", x=0.99 , hjust=0, y=1.05,
color= "black", size=4) +
scale_y_continuous(breaks = seq(0,1,0.1), labels = seq(0,1,0.1)) +
scale_x_continuous(breaks = seq(0,1,0.1), labels = seq(0,1,0.1))
qplot(x=P_AGE, y=V_YEAR, data=subset(df,V_YEAR != "UUUU" & V_YEAR != "NNNN"),
color = P_SEX)
qplot(x=C_TRAF, geom="bar", fill=factor(M), data = df)
ggplot(df, aes(x = C_TRAF, fill = factor(M))) + geom_bar(position = "fill")
qplot(x=C_MNTH, y=C_WTHR  data=df, color = factor(M), geom="jitter")
qplot(x=C_MNTH, y=C_WTHR,  data=df, color = factor(M), geom="jitter")
qplot(x=C_MNTH, y=factor(M),  data=df, color = V_TYPE , geom="jitter")
pnorm
pnorm(0.95)
qnorm(0.95)
1.644854*4.8
+13
7.895299+13
?qnorm()
pnorm(0.84, lower.tail = FALSE)
pnorm(2.26, lower.tail = FALSE)
install.packages("devtools")<br> library(devtools)
install.packages("devtools")
library(devtools)
install_github("rga", "skardhamar")
library(rga)
rga.open(instance="ga")
ga$getProfiles()
id <- "94557664"
ga$getRefClass()
myresults <- ga$getData(id, start.date="2015-04-01", end.date="2013-04-06", metrics = "ga:visits", dimensions = "ga:source", sort = "-ga:visits",start = 1, max = 10)
myresults <- ga$getData(id, start.date="2015-04-01", end.date="2015-04-06", metrics = "ga:visits", dimensions = "ga:source", sort = "-ga:visits",start = 1, max = 10)
View(myresults)
myresults
class(myresults)
str(myresults)
install.packages("gridSVG")
require(ggplot2)
set.seed(955)
dat <- data.frame(cond = rep(c("A", "B"), each=10),
xvar = 1:20 + rnorm(20,sd=3),
yvar = 1:20 + rnorm(20,sd=3))
dat
g4 <- ggplot(dat, aes(x=xvar, y=yvar)) +
geom_smooth() +  #we'll see why order is important
geom_point(shape=19, aes(color = cond), size=5)
g4
require(gridSVG)
g4
g4.svg <- grid.export("plot1.svg",addClasses=TRUE)
cat(saveXML(g4.svg$svg))
install.packages('XML')
install.packages('XML')
install.packages('ggvis')
?data.frame
df <- data.frame(growth = c("Canada's GDP","Household Income"),rate = c(115,15))
rm(list=ls())
df <- data.frame(growth = c("Canada's GDP","Household Income"),rate = c(115,15))
View(df)
qplot(growth,rate, data = df)
library(ggplot2)
qplot(growth,rate, data = df)
qplot(growth,rate, data = df, geom = "bar")
?qplot
df <- data.frame(growth = c("Canada's GDP","Household Income"),rate = c(115,15))
qplot(growth,rate, data = df, geom = "barplot")
qplot(growth,rate, data = df, geom = "bar")
qplot(growth,rate, data = df, geom = "bar", stat="bin")
qplot(growth,rate, data = df, geom = "bar", stat="bin")
df <- data.frame(x = c("Canada's GDP","Household Income"),y = c(115,15))
qplot(growth,rate, data = df, geom = "bar", stat="bin")
qplot(growth,rate, data = df, geom = "bar", stat="identity")
df <- data.frame(x = c("Canada's GDP","Household Income"),y = c(115,15))
qplot(growth,rate, data = df, geom = "bar", stat="identity")
qplot(x,y, data = df, geom = "bar", stat="identity")
ggsave('sketch')
ggsave('sketch.png')
getwd()
install.packages('sqldf')
library(sqldf)
?sqldf
install.packages('htmlwidgets')
library(htmlwidgets)
?htmlwidgets()
vignette("htmlwidgets-intro")
rm(list=ls())
getwd()
getwd()
df <- data.frame(pname = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance')
df <- data.frame(ppcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59)) )
df <- data.frame(ppcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59) )
df
12.59,10.49,8.39,5.59))
library(ggvis)
library(ggvis)
?ggvis()
df <- data.frame(pcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59))
library(ggvis)
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df <- df[order(pcost),]
df <- df[order(df$pcost),]
df
df <- df[order(-df$pcost),]
df
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df$pcategory <- as.character(df$pcategory)
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df <- df[order(-df$pcost),]
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df <- data.frame(pcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59))
df <- df[order(-df$pcost),]
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
levels(df$pcategory)
levels(df$pcategory)
df$pcategory <- df[order(-df$pcost),"pcategory"]
df$pcategory
df <- data.frame(pcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59))
library(ggvis)
df$pcategory <- df[order(-df$pcost),]
library(ggvis)
df$pcategory <- df[order(-df$pcost),]
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df <- data.frame(pcategory = c('Production','Facilities','Labor','Licenses','Taxes',
'Legal','Insurance'), pcost = c(24.8,20.98,17.48,
12.59,10.49,8.39,5.59))
library(ggvis)
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
is.ordered(df$pcategory)
library(ggplot2)
ggplot(aes(x=pcategory,y=pcost), data = df) + geom_bar()
ggplot(aes(x=pcategory,y=pcost), data = df) + geom_bar(stat="identity")
library(dplyr)
df <- transform(df, pcategory=reorder(pcategory, -pcost) )
df
ggplot(aes(x=pcategory,y=pcost), data = df) + geom_bar(stat="identity")
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
df %>% ggvis(~pcategory,~pcost) %>% layer_bars()
levels(df$pcategory)
df %>% ggvis(~pcategory,~pcost) %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost")
df %>% ggvis(~pcategory,~pcost) %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost")
df %>% ggvis(~pcategory,~pcost) %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost")
df %>% ggvis(~pcategory,~pcost) %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost") %>%
add_axis("x", orient = "top", ticks = 0, title = "Plot Title", #title
properties = axis_props(
axis = list(stroke = "white"),
labels = list(fontSize = 0)))
df %>% ggvis(~pcategory,~pcost, fill = ~"blue") %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost") %>%
add_axis("x", orient = "top", ticks = 0, title = "Project Cost Breakdown", #title
properties = axis_props(
axis = list(stroke = "white"),
labels = list(fontSize = 0)))
df %>% ggvis(~pcategory,~pcost, fill = "blue") %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost") %>%
add_axis("x", orient = "top", ticks = 0, title = "Project Cost Breakdown", #title
properties = axis_props(
axis = list(stroke = "white"),
labels = list(fontSize = 0)))
library(scales)
df %>% ggvis(~pcategory,~pcost, fill = "blue") %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost") %>%
add_axis("x", orient = "top", ticks = 0, title = "Project Cost Breakdown", #title
properties = axis_props(
axis = list(stroke = "white"),
labels = list(fontSize = 0))) %>%
hide_legend(scales)
df %>% ggvis(~pcategory,~pcost, fill = "blue") %>% layer_bars() %>%
add_axis("x", title = "Project Category") %>%
add_axis("y", title = "Project Cost") %>%
add_axis("x", orient = "top", ticks = 0, title = "Project Cost Breakdown", #title
properties = axis_props(
axis = list(stroke = "white"),
labels = list(fontSize = 0))) %>%
hide_legend("fill")
getwd()
df <- read.table("world_cup_geo.tsv",sep="\t", header=TRUE)
df <- read.table("world_cup_geo.tsv",sep="\t")
df <- read.table("world_cup_geo.tsv",sep="\t", nrows = 241)
df <- read.table("world_cup_geo.tsv",sep="\t", nrows = 241, header = T)
update.packages()
install.packages('R2D3')
library("devtools")
install_github("jamesthomson/R2D3")
library("R2D3")
hc <- hclust(dist(USArrests), "ave")
plot(hc)
JSON<-jsonHC(hc)
D3Dendro(JSON, file_out="USArrests_Dendo.html")
data(counties)
JSON<-jsonNestedData(structure=counties[,1:3], values=counties[,4], top_label="UK")
D3Tree(JSON, file_out="Tree.html")
data(counties)
qq
mfk
ls()
data(counties)
JSON<-jsonNestedData(structure=counties[,1:3], values=counties[,4], top_label="UK")
mfk
df1 <- read.csv('attendance.csv')
df2 <- read.csv('revenue.csv)
getwd(); setwd('./Project-5-Data-Visualization-and-D3')
getwd()
setwd('./Project-5-Data-Visualization-and-D3')
df1 <- read.csv('attendance.csv')
df2 <- read.csv('revenue.csv)
df1 <- read.csv('attendance.csv')
df2 <- read.csv('revenue.csv')
library(Rserve)
Rserve()
install.packages('Rserve')
library(Rserve)
Rserve()
Rserve(--vanilla)
Rserve('--vanilla')
tidydf <- merge(df1,df2,by=c("Yer","League"))
tidydf <- merge(df1,df2,by=c("Year","League"))
View(tidydf)
library(dplyr)
tidydf <- tidydf %<%
arrange(Year, Attendance)
tidydf <- tidydf %>%
arrange(Year, Attendance)
View(tidydf)
write.csv(tidy,'tidy.csv', row.names=FALSE)
write.csv(tidydf,'tidy.csv', row.names=FALSE)
